{"version":3,"sources":["images/movieapplogo.png","services/api.js","store/actionTypes.js","store/actions/errors.js","store/actions/auth.js","containers/Navbar.js","store/reducers/currentUser.js","store/reducers/reviews.js","store/reducers/comments.js","store/reducers/index.js","store/reducers/error.js","store/actions/reviews.js","containers/CreateForm.js","components/Comment.js","containers/CommentList.js","store/actions/comments.js","containers/CommentForm.js","components/ReviewPage.js","components/Review.js","components/Landing.js","containers/Catalogue.js","containers/AuthForm.js","components/Profile.js","hocs/withAuth.js","containers/AllReviews.js","containers/Main.js","containers/App.js","store/index.js","serviceWorker.js","index.js"],"names":["module","exports","apiCall","method","path","data","Promise","resolve","reject","axios","toLowerCase","then","res","catch","err","SET_CURRENT_USER","addError","error","type","removeError","setCurrentUser","user","setAuthorizationToken","token","defaults","headers","common","setTokenHeader","Navbar","logout","e","preventDefault","props","className","to","this","currentUser","isAuthenticated","id","onClick","Component","connect","state","dispatch","localStorage","clear","DEFAULT_STATE","review","action","reviews","filter","_id","comment","comments","rootReducer","combineReducers","Object","keys","length","errors","message","fetchReviews","CreateForm","handleEdit","ReviewUrl","window","location","pathname","slice","setState","title","image","text","history","push","handleSubmit","postNewReview","handleChange","target","name","value","bind","username","match","console","log","today","Date","toDateString","onSubmit","htmlFor","placeholder","onChange","rows","cols","Edit","src","alt","getState","Comment","userUrl","date","isCurrentUser","removeComment","format","CommentList","user_id","reviewUserId","reviewId","fetchComments","CommentsList","map","key","createdAt","comment_id","ReviewUser_id","review_id","messages","CommentForm","postNewComment","commentFormHidden","ShowForm","autoComplete","ReviewPage","removeRev","removeReview","listen","toString","Review","commentAmount","Landing","Photo","Catalogue","ReviewList","sort","a","b","RecentReviewList","AuthForm","authType","signUp","onAuth","email","password","hidden","toggleShow","heading","buttonText","Profile","activityScore","infoDisplay","handleInfo","withAuth","ComponentToBeRendered","Authenticate","nextProps","AllReviews","searchInput","onSearchChange","includes","withRouter","authUser","userData","setItem","exact","render","component","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","jwtToken","jwtDecode","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c62de36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/movieapplogo.5bbff702.png\";","import axios from 'axios';\r\n\r\nexport function setTokenHeader(token) {\r\n    if (token) {\r\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n    } else {\r\n      delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n}\r\n\r\nexport function apiCall(method, path, data){\r\n    return new Promise((resolve,reject) => {\r\n        return axios[method.toLowerCase()](path,data)\r\n            .then(res => {\r\n                return resolve(res.data);\r\n            })\r\n            .catch(err => {\r\n                return reject(err);\r\n            });\r\n    });\r\n}","export const LOAD_REVIEWS = 'LOAD_REVIEWS';\r\nexport const REMOVE_REVIEW = 'REMOVE_REVIEW';\r\nexport const ADD_ERROR = 'ADD_ERROR';\r\nexport const REMOVE_ERROR = 'REMOVE_ERROR';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const LOAD_COMMENTS = 'LOAD_COMMENTS';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';","import {ADD_ERROR, REMOVE_ERROR} from '../actionTypes';\r\n\r\nexport const addError = error => ({\r\n    type: ADD_ERROR,\r\n    error\r\n})\r\n\r\nexport const removeError = () => ({\r\n    type: REMOVE_ERROR\r\n})","import { apiCall, setTokenHeader } from \"../../services/api\";\r\nimport { SET_CURRENT_USER } from \"../actionTypes\";\r\nimport { addError, removeError } from \"./errors\";\r\n\r\nexport function setCurrentUser(user) {\r\n    return {\r\n      type: SET_CURRENT_USER,\r\n      user\r\n    };\r\n}\r\n\r\nexport function setAuthorizationToken(token) {\r\n    setTokenHeader(token); \r\n}\r\n\r\nexport function logout(){\r\n    return dispatch => {\r\n        localStorage.clear();\r\n        setAuthorizationToken(false);\r\n        dispatch(setCurrentUser({}));\r\n    }\r\n}\r\n\r\n\r\nexport function authUser(type, userData){\r\n  return dispatch => {\r\n      return new Promise((resolve, reject) => {\r\n          return apiCall('post', `http://localhost:8000/auth/${type}`, userData)\r\n              .then(({token, ...user}) => {\r\n                  localStorage.setItem('jwtToken', token);\r\n                  setAuthorizationToken(token)\r\n                  dispatch(setCurrentUser(user));\r\n                  dispatch(removeError());\r\n                  resolve();\r\n              })\r\n              .catch(err => {\r\n                  dispatch(addError(err.message));\r\n                  reject();\r\n              });\r\n      });\r\n  };\r\n}","import React, {Component} from 'react';\r\nimport{ Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../store/actions/auth';\r\n\r\nclass Navbar extends Component{\r\n    logout = e =>{\r\n        e.preventDefault();\r\n        this.props.logout();\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='nav-navbar'>\r\n                <div>\r\n                    <Link to='/' className='nav-title'><i className='fas fa-film '></i> <span className='nav-text-mobile'>The Movie App</span><span className='nav-logo-mobile'>TMA</span></Link>\r\n                </div>\r\n                {this.props.currentUser.isAuthenticated ? (\r\n                    <div>\r\n                        <Link to={`/user/${this.props.currentUser.user.id}`} className='nav-userButton'><i className=\"far fa-user\"></i> <span className='nav-text-mobile'>Profile</span></Link>\r\n                        <Link to={`/users/${this.props.currentUser.user.id}/reviews/new`} className='nav-button'><span className='nav-text-mobile'>Create Review</span> <i className=\"fas fa-plus\"></i></Link>\r\n                        <button className='nav-logout' onClick={this.logout}><i className=\"fas fa-sign-out-alt\"></i></button>\r\n                    </div>\r\n                ): (\r\n                    <div>\r\n                        <Link to='/signup' className='nav-text'>Sign up</Link>\r\n                        <Link to='/signin' className='nav-text nav-login'>Log in</Link>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n       currentUser: state.currentUser \r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(Navbar);","import {SET_CURRENT_USER} from '../actionTypes';\r\n\r\nconst DEFAULT_STATE = {\r\n  isAuthenticated: false, //true, when logged in\r\n  user: {} // all the user info when logged in\r\n};\r\n\r\nexport default (state = DEFAULT_STATE, action) => {\r\n  switch(action.type) {\r\n    case SET_CURRENT_USER:\r\n    return {\r\n      // turn empty object into false or if there are keys, true\r\n      isAuthenticated: !!Object.keys(action.user).length,\r\n      user: action.user\r\n    };\r\n    default:\r\n      return state;  \r\n  }\r\n};","import  {LOAD_REVIEWS, REMOVE_REVIEW} from '../actionTypes';\r\n\r\nconst review = (state=[], action) => {\r\n    switch(action.type){\r\n        case LOAD_REVIEWS:\r\n            return action.reviews;\r\n        case REMOVE_REVIEW:\r\n            return state.filter(review => review._id !== action.id);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default review;","import  {LOAD_COMMENTS, REMOVE_COMMENT} from '../actionTypes';\r\n\r\nconst comment = (state=[], action) => {\r\n    switch(action.type){\r\n        case LOAD_COMMENTS:\r\n            return action.comments;\r\n        case REMOVE_COMMENT:\r\n            return state.filter(comment => comment._id !== action.id);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default comment;","import {combineReducers} from 'redux';\r\nimport errors from './error';\r\nimport currentUser from './currentUser';\r\nimport reviews from './reviews';\r\nimport comments from './comments';\r\n\r\nconst rootReducer = combineReducers({\r\n    currentUser,\r\n    errors,\r\n    reviews,\r\n    comments\r\n});\r\n\r\nexport default rootReducer;","import {ADD_ERROR, REMOVE_ERROR} from '../actionTypes';\r\n\r\nexport default (state = {message: null}, action) => {\r\n    switch(action.type){\r\n        case ADD_ERROR:\r\n            return {...state, message: action.error};\r\n        case REMOVE_ERROR:\r\n            return {...state, message: null};\r\n        default:\r\n            return state;\r\n    }\r\n}","import {apiCall} from '../../services/api';\r\nimport {addError} from './errors';\r\nimport { LOAD_REVIEWS, REMOVE_REVIEW} from '../actionTypes';\r\n\r\nexport const loadReviews = reviews => ({\r\n    type: LOAD_REVIEWS,\r\n    reviews\r\n});\r\n\r\nexport const fetchReviews = () => {\r\n    return dispatch => {\r\n        return apiCall('get', 'http://localhost:8000/')\r\n            .then((res) => {\r\n                dispatch(loadReviews(res))\r\n            })\r\n            .catch(err => {dispatch(addError(err))});\r\n    };\r\n};\r\n\r\nexport const postNewReview = review => (dispatch, getState) => {\r\n    let {currentUser} = getState();\r\n    const id = currentUser.user.id\r\n    return apiCall(\"post\", `http://localhost:8000/users/${id}/reviews`, review)\r\n      .then(res => {\r\n      })\r\n      .catch(err => {\r\n        dispatch(addError('Review submition failed. Did you fill out all the fields?'))});\r\n};\r\n\r\nexport const remove = id => ({\r\n    type: REMOVE_REVIEW,\r\n    id\r\n});\r\n\r\nexport const removeReview = (user_id, review_id) => {\r\n    return dispatch => {\r\n        return apiCall(\"delete\", `http://localhost:8000/users/${user_id}/reviews/${review_id}`)\r\n        .then(() => {\r\n            dispatch(remove(review_id))}\r\n            )\r\n        .catch(err => {\r\n            dispatch(addError(err.messages))\r\n        });\r\n    };\r\n};","import React, {Component} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {apiCall} from '../services/api';\r\nimport { postNewReview } from \"../store/actions/reviews\";\r\n\r\nclass CreateForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {\r\n            user: this.props.currentUser.user.username,\r\n            title: '',\r\n            image: '',\r\n            text: ''\r\n        }\r\n    };\r\n    componentDidMount(){\r\n        if(window.location.pathname.match('/users/.*/reviews/.*/edit')){\r\n            let ReviewUrl = window.location.pathname.slice(0,64);\r\n            apiCall('get', `http://localhost:8000${ReviewUrl}`)\r\n            .then((res) => {\r\n                this.setState({\r\n                    image: res.image,\r\n                    title: res.title,\r\n                    text: res.text\r\n            });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n        }\r\n    }\r\n    handleEdit = (e) => {\r\n        e.preventDefault();\r\n        let ReviewUrl = window.location.pathname.slice(0,64);\r\n        apiCall('put', `http://localhost:8000${ReviewUrl}`, this.state);\r\n        this.setState({user: '', title: '', image: '', text: ''});\r\n        this.props.history.push(ReviewUrl);\r\n        \r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.postNewReview(this.state)\r\n        this.setState({user: '', title: '', image: '', text: ''});\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    render(){\r\n        const date = new Date();\r\n        var today = date.toDateString();\r\n        return(\r\n            <div className='create-container'>\r\n                <div className='create-review'>\r\n                    <h2>Your Review:</h2>\r\n                    <form onSubmit={this.handleSubmit} className='create-form'>\r\n                        {this.props.errors.message && (\r\n                            <div className=\"auth-error\">\r\n                                {this.props.errors.message}\r\n                            </div>\r\n                        )}\r\n                        <label htmlFor='movie'/>\r\n                        <input\r\n                            className='create-input'\r\n                            placeholder='Movie Title'\r\n                            name='title'\r\n                            onChange={this.handleChange}\r\n                            type='text'\r\n                            value={this.state.title}\r\n                        />\r\n                        <label htmlFor='image'/>\r\n                        <input\r\n                            className='create-input'\r\n                            placeholder='URL for the Image of that Movie'\r\n                            name='image'\r\n                            value={this.state.image}\r\n                            onChange={this.handleChange}\r\n                            type='text'\r\n                        />\r\n                        <label htmlFor='review'/>\r\n                        <textarea\r\n                            rows='10'\r\n                            cols='25'\r\n                            value={this.state.text} \r\n                            className='create-input textarea'\r\n                            placeholder='Your Review'\r\n                            name='text'\r\n                            onChange={this.handleChange}\r\n                            type='text'\r\n                        />\r\n                        {!this.props.Edit ? <button\r\n                            className='create-button'\r\n                            type='submit'\r\n                        >Submit!</button> :\r\n                        <button onClick={this.handleEdit} id='create-edit-button' className='create-button'>Edit!</button>}\r\n                    </form>\r\n                </div>\r\n                <div className='preview'>\r\n                    <h2 >Preview:</h2>\r\n                        <div className='create-preview' >\r\n                            <div className='preview-top'>\r\n                                <img className='preview-image' src={this.state.image} alt=''/>\r\n                                <h1 className='preview-title'>{this.state.title}</h1>\r\n                                <h3 className='preview-user'>{this.state.user ? 'Review by: ' : ''}{this.state.user}</h3>\r\n                            </div> \r\n                            <div className='preview-content'>\r\n                                <p className='preview-text'>{this.state.text}</p>\r\n                                <h5 className='preview-date'>{this.state.text ? today : ''}</h5>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      errors: state.errors,\r\n      currentUser: state.currentUser\r\n    };\r\n  }\r\n\r\nexport default  connect(mapStateToProps, { postNewReview })(CreateForm);","import React,{Component} from 'react';\r\nimport Moment from 'react-moment';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Comment extends Component{\r\n    render(){\r\n        const {userUrl, username, comment, date, isCurrentUser, removeComment} = this.props;\r\n        return(\r\n            <div className='comment-box'>\r\n                <div className='comment-user-and-delete'>\r\n                    <Link to={`/user/${userUrl}`} className='comment-user'><i id='comment-user-icon' className=\"far fa-user\"></i> {username}</Link>\r\n                    {isCurrentUser && (\r\n                        <button className='reviewPage-delete' id='comment-delete' onClick={removeComment}><i className=\"far fa-trash-alt\"></i></button>\r\n                    )}\r\n                </div>\r\n                <p className='comment-text'>{comment}</p>\r\n                <Moment className='comment-date' format='DD MM YYYY'>{date}</Moment>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comment;","import React, {Component} from 'react';\r\nimport {fetchComments, removeComment} from '../store/actions/comments';\r\nimport { connect } from 'react-redux';\r\nimport Comment from '../components/Comment';\r\n\r\nclass CommentList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user_id: this.props.currentUser.user.id,\r\n            reviewUserId: window.location.pathname.slice(7,31),\r\n            reviewId: window.location.pathname.slice(40,64)\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchComments(this.state);\r\n    }\r\n    render(){\r\n        const {comments, removeComment} = this.props;\r\n        var CommentsList = comments.map(comment =>{\r\n            return(\r\n                <Comment\r\n                    key={comment._id}\r\n                    userUrl={comment.user._id}\r\n                    comment={comment.comment}\r\n                    date={comment.createdAt}\r\n                    username={comment.user.username}\r\n                    removeComment={removeComment.bind(this, comment._id, this.state.reviewUserId, this.state.reviewId, this.state.user_id)}\r\n                    isCurrentUser={this.props.currentUser.user.id === comment.user._id}\r\n                />\r\n            )\r\n        });\r\n        return(\r\n            <div>\r\n                {CommentsList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state){\r\n    return{\r\n        currentUser: state.currentUser,\r\n        comments: state.comments\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchComments, removeComment})(CommentList);","import {apiCall} from '../../services/api';\r\nimport {addError} from './errors';\r\nimport { LOAD_COMMENTS, REMOVE_COMMENT} from '../actionTypes';\r\n\r\nexport const loadComments = comments => ({\r\n    type: LOAD_COMMENTS,\r\n    comments\r\n});\r\n\r\nexport const fetchComments = (state) => {\r\n    return dispatch => {\r\n        return apiCall('get', `http://localhost:8000/users/${state.reviewUserId}/reviews/${state.reviewId}/comments`)\r\n            .then((res) => {\r\n                dispatch(loadComments(res))\r\n            })\r\n            .catch(err => {dispatch(addError(err))});\r\n    };\r\n};\r\n\r\nexport const postNewComment = state => (dispatch, getState) => {\r\n\r\n    return apiCall(\"post\", `http://localhost:8000/users/${state.reviewUserId}/reviews/${state.reviewId}/comments`, state)\r\n      .then(res => {\r\n      })\r\n      .catch(err => {\r\n        dispatch(addError('Comment submition failed. Did you fill out all the fields?'))});\r\n};\r\n\r\nexport const remove = id => ({\r\n    type: REMOVE_COMMENT,\r\n    id\r\n  });\r\n  \r\nexport const removeComment = (comment_id, ReviewUser_id, review_id, user_id) => {\r\n    return dispatch => {\r\n        return apiCall(\"delete\", `/users/${ReviewUser_id}/reviews/${review_id}/user/${user_id}/comments/${comment_id}`)\r\n        .then(() => dispatch(remove(comment_id)))\r\n        .catch(err => {\r\n            dispatch(addError(err.messages))\r\n        });\r\n    };\r\n};","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { postNewComment } from \"../store/actions/comments\";\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            commentFormHidden: true,\r\n            comment: '',\r\n            user_id: '',\r\n            reviewUserId: '',\r\n            reviewId: ''\r\n        }\r\n        this.ShowForm = this.ShowForm.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            commentFormHidden: true,\r\n            user_id: this.props.currentUser.user.id,\r\n            reviewUserId: window.location.pathname.slice(7,31),\r\n            reviewId: window.location.pathname.slice(40,64)\r\n        });\r\n    }\r\n    ShowForm(){\r\n        this.setState({commentFormHidden: !this.state.commentFormHidden});\r\n    }\r\n    handleChange = e => {\r\n        this.props.removeError();\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    handleSubmit = e =>{\r\n        // e.preventDefault();\r\n        this.props.postNewComment(this.state);\r\n        this.setState({comment: ''});\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='comment-form'>\r\n                <button onClick={this.ShowForm} className='button btn-grad'>\r\n                    Comment {this.state.commentFormHidden ? \r\n                        <i className=\"fas fa-plus\"></i>\r\n                        : <i className=\"fas fa-minus\"></i>}\r\n                </button>\r\n                <div>\r\n                {!this.state.commentFormHidden ?\r\n                <div className='comment-form-box'>\r\n                    <form className='commentForm' onSubmit={this.handleSubmit}>\r\n                        <input\r\n                        placeholder='Comment'\r\n                        autoComplete=\"off\"\r\n                        className=\"comment-input\"\r\n                        name=\"comment\"\r\n                        onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        value={this.state.comment}\r\n                        />\r\n                        <button\r\n                        type=\"submit\"\r\n                        id='comment-button'\r\n                        className=\"button btn-grad\"\r\n                        ><i className=\" fas fa-plus\"></i></button>\r\n                    </form> \r\n                </div>\r\n                : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state){\r\n    return {\r\n       currentUser: state.currentUser \r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, {postNewComment})(CommentForm);","import React, {Component} from 'react';\r\nimport {apiCall} from '../services/api';\r\nimport { connect } from \"react-redux\";\r\nimport { removeReview } from \"../store/actions/reviews\";\r\nimport {Link} from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport CommentList from '../containers/CommentList';\r\nimport CommentForm from '../containers/CommentForm';\r\n\r\nclass ReviewPage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            image: '',\r\n            title: '',\r\n            user: '',\r\n            text: '',\r\n            date: '',\r\n            id: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        apiCall('get', `http://localhost:8000${window.location.pathname}`)\r\n            .then((res) => {\r\n                this.setState({\r\n                    image: res.image,\r\n                    title: res.title,\r\n                    user: res.user,\r\n                    text: res.text,\r\n                    date: res.createdAt,\r\n                    id: res._id\r\n            });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    removeRev = (e) => {\r\n        e.preventDefault();\r\n        this.props.removeReview(this.state.user, this.state.id);\r\n        this.props.history.push('/');\r\n    }\r\n    render(){\r\n        this.props.history.listen(() => {\r\n            this.props.removeError();\r\n          });\r\n        const {title, user, text, date, image} = this.state;\r\n        return(\r\n            <div>\r\n                <div className='review-page'>\r\n                    <div className='reviewPage-top'>\r\n                        <img className='reviewPage-image' src={image} alt={title}/>\r\n                        <h1 className='reviewPage-title'>{title}</h1>\r\n                        {this.props.currentUser.user.id === this.state.user ?\r\n                        <h3 className='reviewPage-user'>This is Your review.</h3>\r\n                        :\r\n                        <Link to={`/user/${user}`} className='reviewPage-user'>Other reviews by this author.</Link>\r\n                        }\r\n                    </div> \r\n                    <div className='reviewPage-content'>\r\n                        <p className='reviewPage-text'>{text}</p>\r\n                        <Moment className='reviewPage-date' format='DD MM YYYY'>{date}</Moment>\r\n                    </div>\r\n                    {this.props.currentUser.user.id === this.state.user &&\r\n                    <div className='reviewPage-buttons'>\r\n                        <Link to={`/users/${this.state.user}/reviews/${this.state.id}/edit`} className='reviewPage-update'>Update <i className=\"fas fa-sync-alt\"></i></Link>\r\n                        <button className='reviewPage-delete' onClick={this.removeRev}>Delete <i className=\"far fa-trash-alt\"></i></button>\r\n                    </div>\r\n                    }\r\n                    {this.props.errors.message && (\r\n                        <div className=\"auth-error\" id='reviewPage-error'>{this.props.errors.message.toString()}</div>\r\n                    )}   \r\n                    <CommentForm removeError={this.props.removeError}/>\r\n                    <CommentList/>\r\n                </div>\r\n            </div>\r\n        )\r\n        }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        currentUser: state.currentUser,\r\n        errors: state.errors\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {removeReview})(ReviewPage);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Review = ({commentAmount, title, user, image,text, id, date}) => {\r\n    return(\r\n        <Link to={`/users/${user}/reviews/${id}`}>\r\n        <div className='review-card'>\r\n            <img className='review-image shadow' src={image} alt={title}/>\r\n            <div className='review-content'>\r\n                <h3 className='review-title'>{title}</h3>\r\n                <h4 className='review-creator'><i id='comment-amount' className=\"fas fa-comments\"></i>({commentAmount > 0 ? commentAmount : 0})</h4>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Review;","import React from 'react';\r\nimport Photo from '../images/movieapplogo.png';\r\n\r\nconst Landing = () => {\r\n    return(\r\n        <div>\r\n            <div className='landing'>\r\n                <div className='landing-text'>\r\n                    <h1 className='landing-h1'>Read. Watch. Review.</h1>\r\n                </div>\r\n                <h3 className='landing-h3'>An endless cycle.</h3>\r\n                <img className='landing-image' src={Photo} alt='Landing'/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing;","import React, {Component} from 'react';\r\nimport Review from '../components/Review';\r\nimport { connect } from \"react-redux\";\r\nimport {fetchReviews} from '../store/actions/reviews';\r\nimport Landing from '../components/Landing';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Catalogue extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetchReviews();\r\n    }\r\n    render(){\r\n    const {reviews, currentUser, errors, removeError, history} = this.props;\r\n    const ReviewsCopy = reviews.map((review) => review);\r\n\r\n    const ReviewList = ReviewsCopy.sort(function(a, b) {\r\n        return b.comments.length - a.comments.length;\r\n    })\r\n        .slice(0, 5)\r\n        .map(review => {\r\n    return (\r\n            <Review\r\n                key={review._id}\r\n                id={review._id}\r\n                title={review.title}\r\n                user={review.user._id}\r\n                image={review.image}\r\n                date={review.createdAt}\r\n                text={review.text}\r\n                commentAmount={review.comments.length}\r\n            />\r\n        );\r\n    });\r\n\r\n    const RecentReviewList = reviews.slice(0,5).map(review => {\r\n        return (\r\n                <Review\r\n                    key={review._id}\r\n                    id={review._id}\r\n                    title={review.title}\r\n                    user={review.user._id}\r\n                    image={review.image}\r\n                    date={review.createdAt}\r\n                    text={review.text}\r\n                    commentAmount={review.comments.length}\r\n                />\r\n            );\r\n        });\r\n    history.listen(() => {\r\n        removeError();\r\n      });\r\n    if(!currentUser.isAuthenticated){\r\n        return(\r\n            <div>\r\n                <Landing/>\r\n            </div>\r\n        )\r\n    }\r\n    return(\r\n            <div>\r\n                {errors.message && (\r\n                    <div className=\"auth-error\" id='catalogue-error'>{errors.message.toString()}</div>\r\n                  )}\r\n                <div className='review-most-active'>\r\n                    <h1 className='review-most-active-title'><i className=\"fas fa-fire catalogue-icon\"></i> Active Reviews</h1>\r\n                    <div className='review-list'>\r\n                        {ReviewList}\r\n                    </div>\r\n                </div>\r\n                <div className='review-most-recent'>\r\n                    <div className='review-most-recent-top'>\r\n                        <h1 className='review-most-active-title' id='recent-title'><i className=\"far fa-clock catalogue-icon\"></i> Recent Reviews</h1>\r\n                        <Link to='/allreviews' className='review-browseall'>Browse All</Link>\r\n                    </div>\r\n                    <div className='review-list'>\r\n                        {RecentReviewList}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        reviews: state.reviews\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {fetchReviews})(Catalogue);","import React, { Component } from \"react\";\r\n\r\nclass AuthForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          email: \"\",\r\n          username: \"\",\r\n          password: \"\",\r\n          hidden: true\r\n        };\r\n        this.toggleShow = this.toggleShow.bind(this);\r\n    }\r\n    componentWillMount(){\r\n      this.setState({hidden: true});\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const authType = this.props.signUp ? \"signup\" : \"signin\";\r\n        this.props.onAuth(authType, {email: this.state.email, username: this.state.username, password: this.state.password})\r\n          .then(() => {\r\n            this.props.history.push(\"/\");\r\n          }).catch((e) => {\r\n            return e;\r\n          });\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n    toggleShow(){\r\n      this.setState({hidden: !this.state.hidden});\r\n    }\r\n\r\n    render() {\r\n        const { email, username, password} = this.state;\r\n        const {\r\n          signUp,\r\n          heading,\r\n          buttonText,\r\n          errors,\r\n          history,\r\n          removeError\r\n        } = this.props;\r\n    \r\n        history.listen(() => {\r\n          removeError();\r\n        });\r\n    \r\n        return (\r\n              <div >\r\n                <form onSubmit={this.handleSubmit} className=\"auth-form\">\r\n                  <h2 className='auth-heading'>{heading}</h2>\r\n                  {errors.message && (\r\n                    <div className=\"auth-error\">{errors.message.toString()}</div>\r\n                  )}\r\n                  <label htmlFor=\"email\"></label>\r\n                  <input\r\n                    placeholder='Email'\r\n                    autoComplete=\"off\"\r\n                    className=\"auth-input\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    onChange={this.handleChange}\r\n                    type=\"text\"\r\n                    value={email}\r\n                  />\r\n                  <div className='auth-password'>\r\n                  <label htmlFor=\"password\"></label>\r\n                  <input\r\n                    placeholder='Password'\r\n                    autoComplete=\"off\"\r\n                    className=\"auth-password-input\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    onChange={this.handleChange}\r\n                    type={this.state.hidden ? 'password' : 'text'}\r\n                    value={password}\r\n                  />\r\n                  <h3 className='auth-visible' onClick={this.toggleShow}><i className=\"far fa-eye\"></i></h3>\r\n                  </div>\r\n                  {signUp && (\r\n                    <div>\r\n                      <label htmlFor=\"username\"></label>\r\n                      <input\r\n                        placeholder='Username'\r\n                        autoComplete=\"off\"\r\n                        className=\"auth-input\"\r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        value={username}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"auth-button btn-grad\"\r\n                  >\r\n                    {buttonText}\r\n                  </button>\r\n                </form>\r\n              </div>\r\n        );\r\n  }\r\n}\r\n    \r\nexport default AuthForm;\r\n","import React, {Component} from 'react';\r\nimport {apiCall} from '../services/api';\r\nimport Review from './Review';\r\n\r\nclass Profile extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            activityScore: 0,\r\n            infoDisplay: false,\r\n            reviews: []\r\n        }\r\n        this.handleInfo = this.handleInfo.bind(this);\r\n    }\r\n    handleInfo(){\r\n        this.setState({infoDisplay: !this.state.infoDisplay});\r\n    }\r\n    componentDidMount(){\r\n        apiCall('get', `http://localhost:8000${window.location.pathname}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    username: res.username,\r\n                    activityScore: res.activityScore\r\n                })\r\n            }).catch(err => console.log(err));\r\n        let url = '/reviews';\r\n        apiCall('get', `http://localhost:8000${window.location.pathname}${url}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    reviews: res\r\n                })\r\n            }).catch(err => console.log(err));\r\n    }\r\n    render(){\r\n    const {reviews} = this.state;\r\n    const ReviewList = reviews.map(review => {\r\n        return (\r\n                <Review\r\n                    key={review._id}\r\n                    id={review._id}\r\n                    title={review.title}\r\n                    user={review.user}\r\n                    image={review.image}\r\n                    date={review.createdAt}\r\n                    text={review.text}\r\n                    commentAmount={review.comments.length}\r\n                />\r\n            );\r\n        });\r\n        return(\r\n            <div>\r\n                {this.state.username ?\r\n                <div className='profile-top'>\r\n                    <h1 className='profile-header'>{this.state.username}'s Reviews</h1>\r\n                    <div id='activity-score'>\r\n                    <h1 className='activity-score-text'>\r\n                        <i className=\"fas fa-trophy profile-trophy\" id={\r\n                            this.state.activityScore < 15  ?\r\n                            'bronze' : [\r\n                                (this.state.activityScore >= 15 && this.state.activityScore < 25 ?\r\n                                    'silver' : 'gold')\r\n                            ]\r\n                        }></i>\r\n                        Activity Score: {this.state.activityScore}\r\n                    </h1>\r\n                    <button onClick={this.handleInfo} id='information'>i</button>\r\n                    {!this.state.infoDisplay ?\r\n                    null : \r\n                    <div className='info-display'>\r\n                        Activity score is increased by creating reviews and commenting on existing ones.\r\n                        It is equally decreased if you remove a review or a comment.\r\n                        By default everyone gets a bronze trophy, after 15 points - a silver one, after 25 - a golden one.</div>}\r\n                    </div>\r\n                </div>\r\n                : <h1 className='profile-header'>Loading</h1>}\r\n                <div className='review-list' id='profile-review-list'>\r\n                    {ReviewList}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction withAuth(ComponentToBeRendered){\r\n  class Authenticate extends Component {\r\n    componentWillMount() {\r\n      if(this.props.isAuthenticated === false) {\r\n        this.props.history.push(\"/signin\");\r\n      }\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n      if(nextProps.isAuthenticated === false) {\r\n        this.props.history.push(\"/signin\");\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return <ComponentToBeRendered {...this.props} />;\r\n    }\r\n  }\r\n\r\n  function mapStateToProps(state) {\r\n    return {\r\n      isAuthenticated: state.currentUser.isAuthenticated\r\n    };\r\n  }\r\n  return connect(mapStateToProps)(Authenticate);\r\n}\r\n\r\nexport default withAuth;","import React, {Component} from 'react';\r\nimport Review from '../components/Review';\r\nimport {connect} from 'react-redux';\r\nimport {fetchReviews} from '../store/actions/reviews';\r\n\r\nclass AllReviews extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searchInput: ''\r\n        }\r\n        this.onSearchChange = this.onSearchChange.bind(this);\r\n    }\r\n    onSearchChange(e){\r\n        this.setState({\r\n            searchInput: e.target.value\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchReviews();\r\n    }\r\n    render(){\r\n        const {reviews} = this.props\r\n        const filteredReviews = reviews.filter(review => {\r\n            return review.title.toLowerCase().includes(this.state.searchInput.toLowerCase());\r\n        });\r\n        const ReviewList = filteredReviews.map(review => {\r\n        return (\r\n                <Review\r\n                    key={review._id}\r\n                    id={review._id}\r\n                    title={review.title}\r\n                    user={review.user._id}\r\n                    image={review.image}\r\n                    date={review.createdAt}\r\n                    text={review.text}\r\n                    commentAmount={review.comments.length}\r\n                />\r\n            );\r\n        });\r\n        return(\r\n            <div>\r\n                <div className='allreviews-input-box'>\r\n                    <label htmlFor='search'></label>\r\n                    <input\r\n                        type='search' \r\n                        onChange={this.onSearchChange} \r\n                        name='searchInput' \r\n                        className='allreviews-input'\r\n                        placeholder='Search'/>\r\n                </div>\r\n                <div className='review-list'>\r\n                    {ReviewList}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state){\r\n    return {\r\n        reviews: state.reviews\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchReviews})(AllReviews);","import React from 'react';\r\nimport CreateForm from './CreateForm';\r\nimport ReviewPage from '../components/ReviewPage';\r\nimport Catalogue from './Catalogue';\r\nimport AuthForm from './AuthForm';\r\nimport Profile from '../components/Profile';\r\nimport withAuth from '../hocs/withAuth';\r\nimport {authUser} from '../store/actions/auth';\r\nimport {Switch, Route, withRouter} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { removeError } from \"../store/actions/errors\";\r\nimport AllReviews from './AllReviews';\r\n\r\n\r\nconst Main = props => {\r\n  const {errors, removeError, authUser, currentUser} = props;\r\n    return (\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route exact path='/' render={props => <Catalogue\r\n          errors={errors}\r\n          removeError={removeError}\r\n          currentUser={currentUser}\r\n          {...props}/>}\r\n          />\r\n          <Route exact path='/allreviews' render={props => <AllReviews {...props}/>}/>\r\n          <Route path=\"/users/:id/reviews/new\" component={withAuth(CreateForm)}/>\r\n          <Route exact path='/signin' render={props => {\r\n            return(\r\n              <AuthForm\r\n                removeError={removeError}\r\n                errors={errors}\r\n                onAuth={authUser}\r\n                buttonText='Log in'\r\n                heading='Welcome Back.'\r\n                {...props}\r\n              />\r\n            );\r\n          }}\r\n          />\r\n          <Route exact path='/signup' render={props => {\r\n            return (\r\n              <AuthForm\r\n                removeError={removeError}\r\n                errors={errors}\r\n                onAuth={authUser}\r\n                signUp\r\n                buttonText='Sign up'\r\n                heading='Movie reviews. All of them.'\r\n                {...props}\r\n              />\r\n            );\r\n          }}\r\n          />\r\n          <Route exact path='/user/:id' render={props => <Profile {...props}/>}/>\r\n          <Route exact path='/users/:id/reviews/:id' render={props => <ReviewPage\r\n            removeError={removeError}\r\n            errors={errors} {...props}/>}\r\n          />\r\n          <Route path='/users/:id/reviews/:id/edit' render={props => <CreateForm Edit {...props}/>}/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentUser: state.currentUser,\r\n    errors: state.errors\r\n  };\r\n}\r\n  \r\nexport default withRouter(\r\n    connect(mapStateToProps, {authUser, removeError })(Main)\r\n  );;","import React, {Component} from 'react';\r\nimport Navbar from './Navbar';\r\nimport {Provider} from 'react-redux';\r\nimport {configureStore} from '../store';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport Main from './Main';\r\nimport { setAuthorizationToken, setCurrentUser } from '../store/actions/auth';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst store = configureStore();\r\n\r\nif(localStorage.jwtToken){\r\n  setAuthorizationToken(localStorage.jwtToken);\r\n  try{\r\n    store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)));\r\n  } catch(e){\r\n    store.dispatch(setCurrentUser({}));\r\n  }\r\n}\r\n\r\nexport default class App extends Component {\r\n  render(){\r\n    return(\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Navbar/>\r\n            <Main/>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import rootReducer from './reducers';\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport function configureStore(){\r\n    const store = createStore(rootReducer,\r\n        compose(applyMiddleware(thunk),\r\n         window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() ));\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}